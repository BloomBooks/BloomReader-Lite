import { Asset } from "expo-asset";
import * as FileSystem from "expo-file-system";
import { Locations } from "../constants/Locations";
import { copyAssetAsync, ensureFolderAsync } from "./FileUtil";
import { webBundleAssets } from "../autogenerated/WebBundleAssets";

export default async function startupTasks(): Promise<void> {
    console.info("startupTasks(): starting.");
    await loadWebBundleAsync();
    console.info("startupTasks(): done.");
}

async function loadWebBundleAsync() {
    // Clearing the folder is optional in production,
    // but useful in development to ensure we're starting from a clean folder.
    await FileSystem.deleteAsync(Locations.WebDistFolder, {
        idempotent: true,
    });
    await ensureFolderAsync(Locations.WebDistFolder);
    const copyPromises = webBundleAssets.map((asset) => {
        const extension = asset.type === "jsAsset" ? "js" : asset.type;
        const destination = `${Locations.WebDistFolder}/${asset.name}.${extension}`;
        console.log({ destination });

        return copyAssetAsync({
            asset,
            to: destination,
        });
    });

    // ENHANCE: catch if Promise.all rejects.
    await Promise.all(copyPromises);
}
