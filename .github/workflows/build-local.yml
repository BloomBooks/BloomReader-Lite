name: Local Build
on:
    workflow_dispatch:
        inputs:
            releaseChannel:
                type: choice
                description: "type of release"
                required: true
                default: "alpha"
                options:
                    - developer
                    - alpha
                    - beta-internal
                    - beta
                    - release-internal
                    - release
    workflow_call:
        inputs:
            releaseChannel:
                type: string
                required: true
run-name: Local Build - ${{ inputs.releaseChannel }}

jobs:
    build-mobile:
        name: ${{ matrix.platform }} binaries
        if: ${{ always() }}
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                working-directory: packages/mobile

        strategy:
            matrix:
                platform: [android, ios]
                include:
                    - os: ubuntu-latest
                      platform: android
                    - os: macos-latest
                      platform: ios
            fail-fast: false
        steps:
            - name: Check for EXPO_TOKEN
              run: |
                  if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
                    echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
                    exit 1
                  fi
              working-directory: ./

            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 16.14.*
                  cache: yarn
                  cache-dependency-path: "**/yarn.lock"

            - name: "[${{ matrix.platform }}] yarn install"
              # run: yarn --frozen-lockfile # TODO: --frozen-lockfile is erroring out, saying it must be updated. But it doesn't do that on my local machine. Why does it do that on the Github runner? Both seem to be using the same yarn version, 1.22.19
              run: yarn

            - name: "[${{ matrix.platform }}] Check for compile errors"
              # Note: Running "tsc" at the end of "yarn build" is the relevant part here.
              run: yarn build

            - name: "[${{ matrix.platform }}] Check if webapp was copied"
              id: check-webapp-copied
              run: |
                  if [ -f "assets/web-dist/index.html" ] || [ -e "assets/web-dist/index.html" ]; then
                      echo "File exists"
                      echo "file_exists=true" >> $GITHUB_OUTPUT
                  else
                      echo "File does not exist"
                      echo "file_exists=false" >> $GITHUB_OUTPUT
                  fi

            - name: "[${{ matrix.platform }}] Fail if webapp didn't get copied"
              if: steps.check-webapp-copied.outputs.file_exists != 'true'
              run: |
                  echo "The file does not exist at assets/web-dist/index.html"
                  exit 1

            - name: "[${{ matrix.platform }}] Setup EAS"
              uses: expo/expo-github-action@v8
              with:
                  eas-version: latest
                  token: ${{ secrets.EXPO_TOKEN }}

            - name: "[${{ matrix.platform }}] EAS Local Build"
              run: eas build --local --platform ${{ matrix.platform }} --profile  ${{ inputs.releaseChannel }} --non-interactive
              # If something goes wrong, the following 2 pages are useful guides for understanding the outline of the build process:
              # https://docs.expo.dev/build-reference/android-builds/ or https://docs.expo.dev/build-reference/ios-builds/

            - name: "[${{ matrix.platform }}] Upload binary"
              uses: actions/upload-artifact@v3
              with:
                  name: BloomReaderLite-${{ matrix.platform }}-${{ inputs.releaseChannel }}
                  path: packages/mobile/build-*

            # ENHANCE: You could have it automatically upload to Diawi: https://github.com/marketplace/actions/upload-diawi

    build-electron:
        name: electron (${{ matrix.platform }}) binaries
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                #platform: [win, mac, unix]
                platform: [unix]
                include:
                    # - os: windows-latest
                    #   platform: win
                    #- os: macos-latest
                    #  platform: mac
                    - os: ubuntu-latest
                      platform: unix
        defaults:
            run:
                working-directory: packages/electron-demo

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 16.14.*
                  cache: yarn
                  cache-dependency-path: "packages/electron-demo/yarn.lock"

            - name: "[electron] yarn install"
              run: yarn

            - name: "[electron] Build"
              run: yarn build

            - name: "[electron] Upload binary"
              uses: actions/upload-artifact@v3
              with:
                  name: BloomReaderLite-${{ matrix.platform }}-${{ inputs.releaseChannel }}
                  path: packages/electron-demo/output/*
